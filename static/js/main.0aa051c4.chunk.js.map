{"version":3,"sources":["styles/Result.module.css","styles/Calculator.module.css","reportWebVitals.js","components/Result/Result.component.tsx","Data/buttons.ts","components/Button/Button.component.tsx","components/Calculator/Calculator.component.tsx","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Result","text","result","className","styles","display_area","currentInput","answerScreen","buttons","label","color","Button","button","handleClick","type","style","onClick","Calculator","operations","useState","setText","setResult","isResult","setIsResult","evaluateResult","lastChar","charAt","length","includes","slice","evaluate","newText","prevText","toString","handleOperations","handleNumbers","keypad_btns","map","b","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aa051c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"display_area\":\"Result_display_area__3uYnn\",\"currentInput\":\"Result_currentInput__1mQ66\",\"answerScreen\":\"Result_answerScreen__1mXdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Calculator_container__NgrF3\",\"keypad_btns\":\"Calculator_keypad_btns__2JUEk\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FC } from 'react'\r\nimport styles from '../../styles/Result.module.css';\r\n\r\ntype ResultProps = {\r\n    text: string,\r\n    result: string\r\n}\r\n\r\nconst Result: FC<ResultProps> = ({ text, result }) => {\r\n    return (\r\n        <section className={styles.display_area}>\r\n            <div className={styles.currentInput}>\r\n                {text}\r\n            </div>\r\n            <div className={styles.answerScreen}>\r\n                {result}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Result;\r\n","import { buttonCal } from '../Types/types'\r\n\r\nexport const buttons: buttonCal[] = [{\r\n    text: 'C',\r\n    label: 'C',\r\n    color: '#ff8800',\r\n},\r\n{\r\n    label: '%',\r\n    text: '%',\r\n    color: '#ff8800',\r\n\r\n},\r\n{\r\n    label: '/',\r\n    text: '/',\r\n    color: '#ff8800',\r\n\r\n},\r\n{\r\n    label: 'x',\r\n    text: '*',\r\n    color: '#ff8800',\r\n\r\n},\r\n{\r\n    label: '7',\r\n    text: '7',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '8',\r\n    text: '8',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '9',\r\n    text: '9',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '+',\r\n    text: '+',\r\n    color: '#ff8800',\r\n\r\n},\r\n{\r\n    label: '4',\r\n    text: '4',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '5',\r\n    text: '5',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '6',\r\n    text: '6',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '-',\r\n    text: '-',\r\n    color: '#ff8800',\r\n\r\n},\r\n{\r\n    label: '1',\r\n    text: '1',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '2',\r\n    text: '2',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '3',\r\n    text: '3',\r\n    color: 'white',\r\n},\r\n{\r\n    label: 'x²',\r\n    text: '^2',\r\n    color: '#ff8800',\r\n\r\n},\r\n\r\n{\r\n    label: '←',\r\n    text: '←',\r\n    color: '#ff8800',\r\n\r\n},\r\n{\r\n    label: '0',\r\n    text: '0',\r\n    color: 'white',\r\n\r\n},\r\n{\r\n    label: '.',\r\n    text: '.',\r\n    color: 'white',\r\n\r\n}, {\r\n    label: '=',\r\n    text: '=',\r\n    color: '#ff8800',\r\n\r\n},]","import React, { FC } from 'react'\r\nimport { buttonCal } from '../../Types/types';\r\n\r\ntype ButtonProps = {\r\n    button: buttonCal,\r\n    handleClick: (text: string) => void;\r\n}\r\n\r\nconst Button: FC<ButtonProps> = ({ button, handleClick }) => {\r\n    return (\r\n        <button\r\n            type=\"button\"\r\n            style={{ 'color': button.color }}\r\n            onClick={() => handleClick(button.text)}>\r\n            {button.label}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, { FC } from 'react'\r\nimport styles from '../../styles/Calculator.module.css'\r\nimport Result from '../Result/Result.component'\r\nimport { buttons } from '../../Data/buttons'\r\nimport { useState } from 'react'\r\nimport { evaluate } from 'mathjs'\r\nimport Button from '../Button/Button.component'\r\n\r\nconst Calculator: FC = () => {\r\n    const operations = ['+', '-', '/', '%', '*', '^'];\r\n    const [text, setText] = useState('');\r\n    const [result, setResult] = useState('');\r\n    const [isResult, setIsResult] = useState(false);\r\n\r\n    const evaluateResult = (result: string) => {\r\n        let lastChar = result.charAt(result.length - 1);\r\n\r\n        if (operations.includes(lastChar)) {\r\n            evaluateResult(result.slice(0, -1))\r\n        } else {\r\n            setText(result);\r\n            setResult(evaluate(result));\r\n            setIsResult(true);\r\n        }\r\n    }\r\n\r\n    const handleNumbers = (newText: string) => {\r\n        if (isResult) setText(newText)\r\n        else setText(text + newText);\r\n        setIsResult(false);\r\n    }\r\n\r\n    const handleOperations = (newText: string) => {\r\n        let prevText = isResult ? result.toString() : text;\r\n        let lastChar = prevText.charAt(prevText.length - 1);\r\n\r\n        if (operations.includes(lastChar)) setText(prevText)\r\n        else setText(prevText + newText);\r\n        setIsResult(false);\r\n    }\r\n\r\n    const handleClick = (newText: string) => {\r\n\r\n        switch (newText) {\r\n            case 'C':\r\n                setText('');\r\n                setResult('');\r\n                setIsResult(false);\r\n                break;\r\n            case '=':\r\n                evaluateResult(text)\r\n                break;\r\n            case '←':\r\n                setText(text.slice(0, -1));\r\n                break;\r\n            case '*':\r\n            case '+':\r\n            case '-':\r\n            case '/':\r\n            case '^2':\r\n            case '%':\r\n                handleOperations(newText)\r\n                break;\r\n            default:\r\n                handleNumbers(newText)\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Result text={text} result={result} />\r\n            <section className={styles.keypad_btns}>\r\n                {buttons.map(b => <Button key={b.text} button={b} handleClick={handleClick} />)}\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Calculator;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Calculator from './components/Calculator/Calculator.component';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}